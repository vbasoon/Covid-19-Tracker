{"version":3,"sources":["InfoBox.js","Map.js","Table.js","utils.js","LineGraph.js","App.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","Table","countries","map","country","sortData","data","sort","a","b","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","casesType","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","url","console","log","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.717e22e9.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\n\nconst InfoBox = ({title, cases, total}) => {\n   return (\n      <>\n      <Card className=\"infoBox\">\n         <CardContent>\n            <Typography className=\"infoBox__title\" color=\"textSecondary\">\n               {title}\n            </Typography> \n            <h2 className=\"infoBox_cases\">{cases}</h2>\n            <Typography className=\"infoBox__title\" color=\"textSecondary\">\n               {total} Total\n            </Typography>\n\n         </CardContent>\n         \n      </Card>\n      </>\n   )\n}\n\nexport default InfoBox\n","import React from 'react'\n\nconst Map = () => {\n   return (\n      <div>\n         <h1>I am a map</h1>\n      </div>\n   )\n}\n\nexport default Map\n","import React from 'react'\nimport './Table.css'\n\nconst Table = ({countries }) => {\n   return (\n      <div className=\"table\">\n         {countries.map(({country, cases}) => (\n            <tr>\n               <td>{country}</td>\n               <td>\n                  <strong>{cases}</strong>\n               </td>\n            </tr>\n         ))}\n      </div>\n   )\n}\n\nexport default Table\n","export const sortData = (data) => {\n   const sortedData = [...data];\n\n   return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n}","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function(tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function(value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType = \"cases\") => {\n  const chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      const newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nconst LineGraph = ({ casesType = \"cases\" }) => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(`https://disease.sh/v3/covid-19/historical/all?lastdays=120`)\n        .then((response) => response.json())\n        .then((data) => {\n          let chartData = buildChartData(data, \"cases\");\n\n          setData(chartData);\n        });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.4)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./utils\";\nimport LineGraph from \"./LineGraph\";\n\nfunction App() {\n  const [countries, setCountries] = useState([\"USA\", \"UK\", \"Ukraine\"]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(`https://disease.sh/v3/covid-19/all`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? `https://disease.sh/v3/covid-19/all`\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n\n        setCountryInfo(data);\n      });\n  };\n\n  console.log(\"COUNTRY INFO>>>\", countryInfo);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem key={country.name} value={country.value}>\n                  {country.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            title=\"Covid-19 cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n        <div className=\"map\">\n          <Map />\n        </div>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table key={country} countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <LineGraph casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}